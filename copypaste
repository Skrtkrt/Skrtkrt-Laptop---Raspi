{% extends 'base.html' %}

{% block content %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notifications - Larva Tracker</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            background: white;
        }

        /* Header and Logo Animation Styles */
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 40px;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: white;
            z-index: 100;
        }

        .logo {
            width: 80px;
            height: auto;
            cursor: pointer;
            transition: transform 0.3s ease;
            animation: logoSway 2s infinite ease-in-out;
        }

        .logo:hover {
            animation: logoWiggle 0.5s infinite;
        }

        @keyframes logoSway {
            0% { transform: rotate(-5deg); }
            50% { transform: rotate(5deg); }
            100% { transform: rotate(-5deg); }
        }

        @keyframes logoWiggle {
            0% { transform: rotate(-8deg); }
            25% { transform: rotate(8deg); }
            50% { transform: rotate(-8deg); }
            75% { transform: rotate(8deg); }
            100% { transform: rotate(-8deg); }
        }

        /* Navigation Styles */
        .nav-menu {
            display: flex;
            gap: 20px;
            align-items: center;
        }

        .nav-menu a {
            text-decoration: none;
            color: #666;
            font-size: 18px;
            transition: color 0.3s ease;
        }

        .nav-menu a.active {
            color: black;
            font-weight: bold;
        }

        .nav-menu span {
            color: #666;
        }

        /* Notifications Content Styles */
        .notifications-container {
            padding: 100px 40px 80px;
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 20px;
            max-width: 1200px;
            margin: 0 auto;
            width: 100%;
        }

        .notification-card {
            background-color: #BFBFBF;
            padding: 20px;
            border-radius: 4px;
        }

        .notification-title {
            font-size: 20px;
            margin-bottom: 20px;
        }

        .notification-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .detail-column {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .detail-item {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .detail-label {
            font-weight: bold;
        }

        .detail-value {
            color: #666;
            font-style: italic;
        }

        /* Footer Styles */
        .footer {
            background-color: #BFBFBF;
            padding: 20px;
            display: flex;
            gap: 40px;
            align-items: center;
            justify-content: flex-start;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 100;
        }

        .battery-indicator {
            width: 50px;
            height: 25px;
            background-color: #00FF00;
            border: 2px solid #333;
            border-radius: 3px;
            position: relative;
        }

        .battery-indicator::after {
            content: '';
            position: absolute;
            right: -6px;
            top: 50%;
            transform: translateY(-50%);
            width: 4px;
            height: 10px;
            background-color: #333;
            border-radius: 0 2px 2px 0;
        }

        .water-tank {
            width: 30px;
            height: 40px;
            border: 2px solid #333;
            border-radius: 5px;
            background-color: #00FF00;
            position: relative;
            display: flex;
            align-items: flex-end;
        }

        .water-tank::before {
            content: '';
            position: absolute;
            top: -8px;
            left: 50%;
            transform: translateX(-50%);
            width: 16px;
            height: 8px;
            background-color: #333;
            border-radius: 3px 3px 0 0;
        }

        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                gap: 20px;
                padding: 20px;
            }

            .nav-menu {
                flex-wrap: wrap;
                justify-content: center;
            }

            .notifications-container {
                padding: 20px;
            }

            .notification-content {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="{{ url_for('static', filename='images/larva logo.png') }}" alt="Logo" class="logo" onclick="window.location.href='/maps'">
        <nav class="nav-menu">
            <a href="/main">HOME</a>
            <span>|</span>
            <a href="/maps">MAPS</a>
            <span>|</span>
            <a href="/schedules">SCHEDULES</a>
            <span>|</span>
            <a href="/notifications" class="active">NOTIFICATIONS</a>
            <span>|</span>
            <a href="/error-logs">ERROR LOGS</a>
        </nav>
    </div>

    <div class="notifications-container">
        <div class="notification-card">
            <h2 class="notification-title">Breeding Site Detection</h2>
            <div class="notification-content">
                <div class="detail-column">
                    <div class="detail-item">
                        <span class="detail-label">pH:</span>
                        <span class="detail-value" id="phValue">...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">DO:</span>
                        <span class="detail-value" id="doValue">...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Turbidity:</span>
                        <span class="detail-value" id="turbidityValue">...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Temperature:</span>
                        <span class="detail-value" id="tempValue">...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Water Level:</span>
                        <span class="detail-value" id="waterLevelValue">...</span>
                    </div>
                </div>
                <div class="detail-column">
                    <div class="detail-item">
                        <span class="detail-label">Status:</span>
                        <span class="detail-value" id="breedingStatus">...</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="notification-card">
            <div class="notification-title">A new breeding site has been detected!</div>
            <div class="notification-content">
                <div class="detail-column">
                    <div class="detail-item">
                        <span class="detail-label">Timestamp:</span>
                        <span class="detail-value">Waiting for connection...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">GPS location:</span>
                        <span class="detail-value">Waiting for connection...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Type of Object:</span>
                        <span class="detail-value">No data available</span>
                        <span class="detail-note">(bamboo, tires, plant pots cement bamboo planters)</span>
                    </div>
                </div>
                <div class="detail-column">
                    <div class="detail-item">
                        <span class="detail-label">pH Level:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Turbidity:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Dissolved Oxygen:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Temperature:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="notification-card">
            <div class="notification-title">A breeding site has been treated!</div>
            <div class="notification-content">
                <div class="detail-column">
                    <div class="detail-item">
                        <span class="detail-label">Timestamp:</span>
                        <span class="detail-value">Waiting for connection...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">GPS location:</span>
                        <span class="detail-value">Waiting for connection...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Type of Object:</span>
                        <span class="detail-value">No data available</span>
                        <span class="detail-note">(bamboo, tires, plant pots cement bamboo planters)</span>
                    </div>
                </div>
                <div class="detail-column">
                    <div class="detail-item">
                        <span class="detail-label">pH Level:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Turbidity:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Dissolved Oxygen:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Temperature:</span>
                        <span class="detail-value">Waiting for sensor...</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="notification-card" id="sprayEventsCard">
            <h2 class="notification-title">Spray Event History</h2>
            <div id="sprayEventsList">
                Loading spray events...
            </div>
        </div>
    </div>

    <script>
        // --- Breeding Site Detection Logic ---
        function updateBreedingStatus() {
            fetch('/api/live_sample')
                .then(res => res.json())
                .then(data => {
                    const ph = data.ph.ph;
                    const doValue = data.do.do;
                    const turbidity = data.turbidity.voltage;
                    const temp = data.temp;
                    const waterLevel = data.water_level.voltage;
    
                    document.getElementById('phValue').textContent = ph ? ph.toFixed(2) : '...';
                    document.getElementById('doValue').textContent = doValue ? doValue.toFixed(2) : '...';
                    document.getElementById('turbidityValue').textContent = turbidity ? turbidity.toFixed(2) + 'V' : '...';
                    document.getElementById('tempValue').textContent = temp ? temp.toFixed(2) + '�C' : '...';
                    document.getElementById('waterLevelValue').textContent = waterLevel ? waterLevel.toFixed(2) + 'V' : '...';
    
                    let meetsRequirements = 0;
                    if (ph >= 5.26 && ph <= 8.41) meetsRequirements++;
                    if (doValue >= 0.5 && doValue <= 2.6) meetsRequirements++;
                    if (turbidity >= 0.29 && turbidity <= 731.00) meetsRequirements++;
                    if (temp >= 26.80 && temp <= 33.20) meetsRequirements++;
    
                    if (waterLevel && meetsRequirements >= 2) {
                        document.getElementById('breedingStatus').textContent = 'Breeding Site Detected';
                    } else {
                        document.getElementById('breedingStatus').textContent = 'No Breeding Site Detected';
                    }
                });
        }
        setInterval(updateBreedingStatus, 5000);
        updateBreedingStatus();

        // --- Spray Event History ---
        function deleteSprayEvent(id) {
            fetch(`/api/spray_events/delete/${id}`, { method: 'POST' })
                .then(res => res.json())
                .then(data => {
                    if (data.status === 'success') {
                        loadSprayEvents();
                    } else {
                        alert('Failed to delete event: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(() => alert('Error deleting event.'));
        }
        function loadSprayEvents() {
            fetch('/api/spray_events')
                .then(res => res.json())
                .then(events => {
                    const list = document.getElementById('sprayEventsList');
                    if (!events || events.length === 0) {
                        list.innerHTML = '<div>No spray events recorded.</div>';
                        return;
                    }
                    list.innerHTML = events.map(ev => `
                        <div class="detail-item" style="margin-bottom: 16px; border-bottom: 1px solid #ccc; padding-bottom: 8px;">
                            <div><b>Date:</b> ${ev.date} <b>Time:</b> ${ev.time}</div>
                            <div><b>Water Level:</b> ${ev.water_level !== null ? ev.water_level.toFixed(2) : 'N/A'}</div>
                            <div><b>pH:</b> ${ev.ph !== null ? ev.ph.toFixed(2) : 'N/A'}</div>
                            <div><b>Turbidity:</b> ${ev.turbidity !== null ? ev.turbidity.toFixed(2) : 'N/A'}</div>
                            <div><b>Temperature:</b> ${ev.temperature !== null ? ev.temperature.toFixed(2) : 'N/A'}</div>
                            <div><b>Latitude:</b> ${ev.lat !== null ? ev.lat : 'N/A'} <b>Longitude:</b> ${ev.lng !== null ? ev.lng : 'N/A'}</div>
                            <button onclick="deleteSprayEvent(${ev.id})" style="margin-top:8px; color:#fff; background:#d9534f; border:none; border-radius:4px; padding:4px 12px; cursor:pointer;">Delete</button>
                        </div>
                    `).join('');
                })
                .catch(() => {
                    document.getElementById('sprayEventsList').innerHTML = '<div>Error loading spray events.</div>';
                });
        }
        loadSprayEvents();
    </script>
</body>
</html>
{% endblock %} 
